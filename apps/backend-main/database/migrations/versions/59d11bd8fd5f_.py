"""empty message

Revision ID: 59d11bd8fd5f
Revises:
Create Date: 2021-10-26 13:18:22.887356

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "59d11bd8fd5f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("username", sa.String(length=80), nullable=False),
        sa.Column("email", sa.String(length=80), nullable=False),
        sa.Column("password", sa.LargeBinary(length=128), nullable=True),
        sa.Column("first_name", sa.String(length=30), nullable=True),
        sa.Column("last_name", sa.String(length=30), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )

    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "jokeposts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column(
            "type",
            sa.String(),
            sa.CheckConstraint(
                "type='TEXT' OR type='MEME'", name="CK__InvalidType__Type"
            ),
            nullable=False,
        ),
        sa.Column(
            "title",
            sa.String(length=120),
            sa.CheckConstraint("title != ''", name="CK__EmptyString__Title"),
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "text_joke",
            sa.String(),
            sa.CheckConstraint(
                "text_joke != ''", name="CK__EmptyString__TextJoke"
            ),
            nullable=True,
        ),
        sa.Column("text_background", sa.String(), nullable=True),
        sa.Column(
            "meme_joke",
            sa.String(),
            sa.CheckConstraint(
                "meme_joke != ''", name="CK__EmptyString__MemeJoke"
            ),
            nullable=True,
        ),
        sa.Column("created_by", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "(type='MEME' AND meme_joke IS NOT NULL) OR type!='MEME'",
            name="CK__Unavilable__TypeAndMemeJoke",
        ),
        sa.CheckConstraint(
            "(type='TEXT' AND text_joke IS NOT NULL) OR type!='TEXT'",
            name="CK__Unavilable__TypeAndTextJoke",
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "jokepost_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("jokepost_id", sa.Integer(), nullable=False),
        sa.Column(
            "like",
            sa.Integer(),
            sa.CheckConstraint(
                "like=1 OR like=-1", name="CK__InvalidType__Like"
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["jokepost_id"],
            ["jokeposts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id",
            "jokepost_id",
            name="UK__ALREADYEXIST__UserIdAndJokePostId",
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("jokepost_likes")
    op.drop_table("roles")
    op.drop_table("jokeposts")
    op.drop_table("users")
    # ### end Alembic commands ###
